name: version release

on:
  push:
    branches:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.2
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          target_commitish: ${{ steps.extract_branch.outputs.branch }}
          token: ${{ secrets.PAT }}
          tag_name: ${{ steps.extract_branch.outputs.branch }}
          prerelease: false
          draft: false
          generate_release_notes: true
          name: ${{ steps.extract_branch.outputs.branch }}

  push_release_to_registry:
    name: Push release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: gtstef/filebrowser
      - name: Strip v from version number
        id: modify-json
        run: |
          JSON="${{ steps.meta.outputs.tags }}"
          # Use jq to remove 'v' from the version field
          JSON=$(echo "$JSON" | sed 's/filebrowser:v/filebrowser:/')
          echo "CLEANED_TAG=$JSON" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          file: ./Dockerfile
          push: true
          tags: ${{ steps.modify-json.outputs.CLEANED_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
