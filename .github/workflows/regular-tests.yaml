name: regular tests

on:
  push:
    branches:
      - "**"

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - working-directory: backend
        run: go test -race -v ./...
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
            go-version: 'stable'
      - uses: golangci/golangci-lint-action@v5
        with:
          version: 'v1.64'
          working-directory: backend
  format-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - working-directory: backend
        run: go fmt ./...
  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - working-directory: frontend
        run: npm i && npm run lint
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - working-directory: frontend
        run: npm i && npm run test

  push_release_to_registry:
    name: Push release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker and GHCR
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            gtstef/filebrowser
            ghcr.io/gtstef/filebrowser
      - name: Modify tags (strip 'v' and add 'beta'/'stable' if needed)
        id: modify-json
        run: |
          JSON='${{ steps.meta.outputs.json }}'
          MODIFIED_JSON=$(echo "$JSON" | jq '
            .tags |= map(sub(":v"; ":")) | 
            if any(.tags[]; test("beta")) then .tags += ["gtstef/filebrowser:beta", "ghcr.io/gtstef/filebrowser:beta"] else . end |
            if any(.tags[]; test("stable")) then .tags += ["gtstef/filebrowser:stable", "ghcr.io/gtstef/filebrowser:stable"] else . end
          ')
          TAGS_CSV=$(echo "$MODIFIED_JSON" | jq -r '.tags | join(",")')
          echo "cleaned_tag=$TAGS_CSV" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          file: ./_docker/Dockerfile
          push: true
          tags: ${{ steps.modify-json.outputs.cleaned_tag }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Extract metadata (tags, labels) for Docker and GHCR
        id: meta-media
        uses: docker/metadata-action@v5
        with:
          images: |
            gtstef/filebrowser-media
            ghcr.io/gtstef/filebrowser-media
      - name: Modify tags (strip 'v' and add 'beta'/'stable' if needed)
        id: modify-json-media
        run: |
          JSON='${{ steps.meta-media.outputs.json }}'
          MODIFIED_JSON=$(echo "$JSON" | jq '
            .tags |= map(sub(":v"; ":")) | 
            if any(.tags[]; test("beta")) then .tags += ["gtstef/filebrowser-media:beta", "ghcr.io/gtstef/filebrowser-media:beta"] else . end |
            if any(.tags[]; test("stable")) then .tags += ["gtstef/filebrowser-media:stable", "ghcr.io/gtstef/filebrowser-media:stable"] else . end
          ')
          TAGS_CSV=$(echo "$MODIFIED_JSON" | jq -r '.tags | join(",")')
          echo "cleaned_tag=$TAGS_CSV" >> $GITHUB_OUTPUT
      - name: Build and push media image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          file: ./_docker/Dockerfile.media
          push: true
          tags: ${{ steps.modify-json-media.outputs.cleaned_tag }}
          labels: ${{ steps.meta-media.outputs.labels }}
