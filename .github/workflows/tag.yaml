name: tag update

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: write

jobs:
  update_tag:
    name: Update Release tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
      - name: Install dependencies and build frontend
        run: npm i && npm run build
        working-directory: frontend
      - name: Install UPX
        run: sudo apt-get install -y upx
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
          workdir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push_release_to_registry:
    name: Push release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.PAT }}
      - name: Extract metadata (tags, labels) for Docker and GHCR
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            gtstef/filebrowser
            ghcr.io/gtsteffaniak/filebrowser
      - name: Modify tags (strip 'v' and add 'beta'/'stable' if needed)
        id: modify-json
        run: |
          JSON='${{ steps.meta.outputs.json }}'
          MODIFIED_JSON=$(echo "$JSON" | jq '
            .tags |= map(sub(":v"; ":")) |
            if any(.tags[]; test("beta")) then
              .tags += [
                "gtstef/filebrowser:beta",
                "ghcr.io/gtsteffaniak/filebrowser:beta",
                "gtstef/filebrowser:latest",
                "ghcr.io/gtsteffaniak/filebrowser:latest"
              ]
            else . end |
            if any(.tags[]; test("stable")) then
              .tags += [
                "gtstef/filebrowser:stable",
                "ghcr.io/gtsteffaniak/filebrowser:stable",
                "gtstef/filebrowser:latest",
                "ghcr.io/gtsteffaniak/filebrowser:latest"
              ]
            else . end
          ')
          TAGS_CSV=$(echo "$MODIFIED_JSON" | jq -r '.tags | join(",")')
          echo "$TAGS_CSV" > modified_tags.txt  # Optional debug output
          echo "cleaned_tag=$TAGS_CSV" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          platforms: linux/amd64,linux/arm64
          file: ./_docker/Dockerfile
          push: true
          tags: ${{ steps.modify-json.outputs.cleaned_tag }}
          labels: ${{ steps.meta.outputs.labels }}

  push_slim_release_to_registry:
    name: Push slim release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.PAT }}
      - name: Extract metadata (tags, labels) for Docker and GHCR
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            gtstef/filebrowser
            ghcr.io/gtsteffaniak/filebrowser
      - name: Modify tags for slim image
        id: modify-tags-slim
        run: |
          TAG_OR_BRANCH="${{ github.ref_name }}"
          CLEAN_TAG=$(echo "$TAG_OR_BRANCH" | sed 's/^v//')
          BASE_TAG="gtstef/filebrowser:${CLEAN_TAG}-slim"
          TAGS=("$BASE_TAG")
          if echo "$CLEAN_TAG" | grep -qi "beta"; then
            TAGS+=(
              "gtstef/filebrowser:beta-slim"
              "ghcr.io/gtsteffaniak/filebrowser:beta-slim"
              "gtstef/filebrowser:slim"
              "ghcr.io/gtsteffaniak/filebrowser:slim"
            )
          elif echo "$CLEAN_TAG" | grep -qi "stable"; then
            TAGS+=(
              "gtstef/filebrowser:stable-slim"
              "ghcr.io/gtsteffaniak/filebrowser:stable-slim"
              "gtstef/filebrowser:slim"
              "ghcr.io/gtsteffaniak/filebrowser:slim"
            )
          fi
          TAGS_CSV=$(IFS=, ; echo "${TAGS[*]}")
          echo "$TAGS_CSV" > modified_tags.txt  # Optional debug output
          echo "cleaned_tag=$TAGS_CSV" >> $GITHUB_OUTPUT
      - name: Build and push slim image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          file: ./_docker/Dockerfile.slim
          latest: false
          push: true
          tags: ${{ steps.modify-json-slim.outputs.cleaned_tag }}
          labels: ${{ steps.meta.outputs.labels }}
