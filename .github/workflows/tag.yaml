name: tag update

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

permissions:
  contents: write

jobs:
  update_tag:
    name: Update Release tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
      - name: Install dependencies and build frontend
        run: npm i && npm run build
        working-directory: frontend
      - name: Install UPX
        run: sudo apt-get install -y upx
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
          workdir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push_release_to_registry:
    name: Push release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: gtstef/filebrowser
      - name: Modify tags (strip 'v' and add 'beta' if needed)
        id: modify-json
        run: |
          # Convert multiline output to a space-separated list
          JSON=$(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' ')

          # Remove 'v' prefix from version tags
          JSON=$(echo "$JSON" | sed 's/\bname\/app:v/name\/app:/g' | sed 's/\bghcr.io\/username\/app:v/ghcr.io\/username\/app:/g')

          # If any tag includes "beta", append additional "beta" tag
          if echo "$JSON" | grep -q "beta"; then
            JSON="$JSON name/app:beta ghcr.io/username/app:beta"
          fi

          # If any tag includes "stable", append additional "stable" tag
          if echo "$JSON" | grep -q "stable"; then
            JSON="$JSON name/app:stable ghcr.io/username/app:stable"
          fi

          # Output properly formatted tags
          echo "cleaned_tag<<EOF" >> $GITHUB_ENV
          echo "$JSON" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          file: ./_docker/Dockerfile
          push: true
          tags: ${{ steps.modify-json.outputs.cleaned_tag }}
          labels: ${{ steps.meta.outputs.labels }}
